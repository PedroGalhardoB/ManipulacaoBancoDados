---
title: "Desafio 14"
author: "Pedro Galhardo"
format: 
  html:
      self-contained: true
editor: visual
---

# DESAFIO 14

# Como se visualiza os dados?

```{python}
#!pip install plotnine
# comentado para deixar o HTML mais limpo.
```

```{python}
from plotnine.data import economics
print(economics)
```

# Visualização de dados:

```{python}
from plotnine import ggplot, aes, geom_line
plot01 = (
  ggplot(economics)
  + aes(x = 'date', y = 'pop')
  + geom_line()
)
```

# Gráfico de Linhas:

```{python}
plot01.show()
```

# Um outro conjunto de dados:

```{python}
from plotnine.data import mpg
print(mpg)
```

# Visualização 1:

```{python}
from plotnine import ggplot, aes, geom_point
grafico1 = (  ggplot(mpg)  + aes(x = 'class', y = 'hwy')  + geom_point())
grafico1.show()
```

# Visualização 2:

```{python}
from plotnine import (
  ggplot, aes, geom_point, geom_boxplot,
  geom_jitter, theme_bw, labs
)
plot02 = (
  ggplot(mpg)
  + aes(x = 'class', y = 'hwy')
  + geom_boxplot()
  + geom_jitter(width=0.2, alpha=0.5)
  + theme_bw()
  + labs(x = "Tipo de Veículo",
         y = "Consumo na Estrada (mpg)")
)
```

# Visualização 2 Melhorada:

```{python}
plot02.show()
```

# Visualização 2 Ainda Melhor:

```{python}
from plotnine import (
  ggplot, aes, geom_point, geom_boxplot,
  geom_jitter, theme_bw, labs
)
plot03 = (
  ggplot(mpg)
  + aes(x = 'class', y = 'hwy * 0.4251')
  + geom_boxplot()
  + geom_jitter(width=0.2, alpha=0.5)
  + theme_bw()
  + labs(x = "Tipo de Veículo",
         y = "Consumo na Estrada (km/l)",
         title = "Consumo de Combustível",
         subtitle = "Veículos fabricados entre 1999 e 2008")
)
```

```{python}
plot03.show()
```

# Consumo vs. Número de Cilindros:

```{python}
grafico2 = (ggplot(mpg) + aes(x = 'cyl', y = 'hwy') + geom_point())
grafico2.show()
```

O número de cilindros é, na prática, visto como uma variável categórica

```{python}
from plotnine import ggplot, aes, geom_boxplot, coord_flip, theme_bw
plot04 = (
  ggplot(mpg) + aes(x = 'factor(cyl)', y = 'hwy*0.4251') + geom_boxplot()
  + coord_flip() + theme_bw()
  + labs(x = 'Número de Cilindros', y = 'Consumo na Estrada (km/L)')
)
```

```{python}
plot04.show()
```

# Representando mais que 2 dimensões:

```{python}
from plotnine import ggplot, aes, geom_point, facet_grid
plot05 = (
  ggplot(mpg) + aes(x = 'displ', y = 'hwy*0.4251') + geom_point()
  + facet_grid("year", "class") + theme_bw()
  + labs(x = "Tamanho do Motor", y = "Consumo na Estrada (km/L)")
)
```

# Uso de Facetas:

```{python}
plot05.show()
```

# Representando mais que 2 dimensões:

```{python}
from plotnine import ggplot, aes, geom_point, facet_grid
plot06 = (
  ggplot(mpg) + aes(x = 'displ', y = 'hwy*0.4251', color = 'factor(year)')
  + geom_point()
  + facet_grid(cols = "class") + theme_bw()
  + labs(x = "Tamanho do Motor", y = "Consumo na Estrada (km/L)",
         color = "Ano de Fabricação",
         title = "Consumo de Combustível em Função do Tamanho do Motor",
         subtitle = "Motores maiores consomem mais combustível")
)
```

# Mais Sobre Consumo:

```{python}
plot06.show()
```

# Gravando Gráficos em Arquivos:

```{python}
from plotnine import ggplot, aes, geom_point, facet_grid
plot07 = (
  ggplot(mpg) + aes(x = 'displ', y = 'hwy*0.4251', color = 'factor(year)')
  + geom_point()
  + facet_grid(cols = "class") + theme_bw()
  + labs(x = "Tamanho do Motor", y = "Consumo na Estrada (km/L)",
         color = "Ano de Fabricação",
         title = "Consumo de Combustível em Função do Tamanho do Motor",
         subtitle = "Motores maiores consomem mais combustível")
)
plot07.save("grafico07.png", dpi = 600)
```

```{r}
# Salvando a data e o horário em que o html foi gerado
Sys.time()
```
